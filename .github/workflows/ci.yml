name: Run tests

on:
  pull_request:
    branches:
      - master
    paths:
      - src/**
      - .github/workflows/**
  # Upload code coverage results when PRs are merged
  push:
    branches:
      - master
    paths:
      - src/**
      - .github/workflows/**

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  test:
    strategy:
      matrix:
        # TODO: change to ubuntu-latest back
        # see https://github.com/actions/runner-images/issues/10989
        # Process terminated. Couldn't find a valid ICU package installed on the system. Set the configuration flag System.Globalization.Invariant to true if you want to run with no globalization
        os: [ubuntu-22.04, windows-latest]
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup .NET SDKs
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: |
            3.1.x
            5.0.x
            6.0.x
            7.0.x
            8.0.x
            9.0.x
      - name: Install dependencies
        working-directory: src
        run: dotnet restore
      - name: Build solution [Release]
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        working-directory: src
        run: dotnet build --no-restore -c Release
      - name: Build solution [Debug]
        working-directory: src
        run: dotnet build --no-restore -c Debug
      - name: Test solution [Debug] with code coverage
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        working-directory: src
        run: >
          dotnet test
          --no-restore
          --no-build
          --collect "XPlat Code Coverage"
          --results-directory .coverage
          --
          DataCollectionRunSettings.DataCollectors.DataCollector.Configuration.Format=opencover
      - name: Test solution [Debug] without code coverage
        if: ${{ startsWith(matrix.os, 'windows') }}
        working-directory: src
        run: dotnet test --no-restore --no-build
      - name: Upload coverage to codecov
        if: ${{ startsWith(matrix.os, 'ubuntu') }}
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: 'src/.coverage/**/coverage.opencover.xml'

  buildcheck:
    needs:
      - test
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Pass build check
        if: ${{ needs.test.result == 'success' }}
        run: exit 0
      - name: Fail build check
        if: ${{ needs.test.result != 'success' }}
        run: exit 1
